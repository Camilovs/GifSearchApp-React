{"version":3,"sources":["componentes/AddCategory.js","helpers/getGifs.js","componentes/GifGridItem.js","componentes/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setinputValue","console","log","onSubmit","e","preventDefault","trim","categorias","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","categoria","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"iMAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAe5C,OADAC,QAAQC,IAAIH,GAER,cAAC,WAAD,UACI,sBAAMI,SAVO,SAACC,GAClBA,EAAEC,iBACCN,EAAWO,SACVT,GAAc,SAAAU,GAAU,OAAKR,GAAL,mBAAmBQ,OAC3CP,EAAc,MAMd,SACA,uBAAOQ,KAAK,OACRC,MAAOV,EACPW,SAhBc,SAACN,GACvBJ,EAAcI,EAAEO,OAAOF,e,+BCNlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAETC,EAFS,kGAEwFC,UAAUH,IAFlG,SAGII,MAAMF,GAHV,cAGTG,EAHS,gBAIMA,EAAKC,OAJX,uBAIRC,EAJQ,EAIRA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GACf,MAAQ,CACJC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAIQ,EAAIG,OAAOC,iBAAiBZ,QAT7B,kBAcRM,GAdQ,4CAAH,sDCCPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACI,qBAAKc,UAAU,6DAAf,SACI,qBAAKC,IAAKf,EAAKgB,IAAKN,OCFnBO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACoB,GAAe,IAAD,EAEbnC,mBAAS,CAC/BsB,KAAK,GACLc,SAAQ,IAJ2B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAsBvC,OAfAC,qBAAU,WAENzB,EAAQqB,GACPK,MAAK,SAAAC,GAEFtC,QAAQC,IAAIqC,GACZH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAMnB,CAACD,IACIE,EDnBuBK,CAAa3B,GAA/Ba,EAFuB,EAE5BN,KAAYc,EAFgB,EAEhBA,QAEnB,OACI,eAAC,WAAD,WACI,qBAAIL,UAAU,wDAAd,cAAwEhB,KACvEqB,GAAW,mBAAGL,UAAU,mDAAb,yBACZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAGQA,GAFCA,EAAIC,aEXxBiB,EAAe,WAAO,IAAD,EAEM3C,mBAAS,CAAC,WAFhB,mBAEvBS,EAFuB,KAEXV,EAFW,KAI9B,OACI,eAAC,WAAD,WACI,8CACA,cAAC,EAAD,CAAcA,cAAeA,IAC7B,uBACA,6BACKU,EAAWe,KAAI,SAAAW,GAAS,OACrB,cAAC,EAAD,CAAyBpB,SAAYoB,GAAvBA,Y,MCVlCS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8ae707b5.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nexport const AddCategory = ({setCategorias}) => {\r\n\r\n    const [inputValue, setinputValue] = useState(\"\")\r\n\r\n    const handleInputChange = (e)=>{\r\n        setinputValue(e.target.value)  \r\n    }\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        if(inputValue.trim()){\r\n            setCategorias(categorias => [inputValue,...categorias])\r\n            setinputValue(\"\")            \r\n        }\r\n    }\r\n    console.log(inputValue)\r\n    return (\r\n        <Fragment>\r\n            <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" \r\n                value={inputValue} \r\n                onChange={handleInputChange}/>           \r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategorias: PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async(category)=>{\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?api_key=ji86JDWe9CfKRhtrxWxiInvaRyXxDigs&limit=5&q=${encodeURI(category)}`\r\n        const resp = await fetch(url) //await espera por el termino del fecth\r\n        const {data} = await resp.json()//await espera por el json \r\n        const gifs = data.map( img =>{\r\n                return ({\r\n                    id:img.id,\r\n                    title:img.title,\r\n                    url:img.images.downsized_medium.url\r\n                })\r\n        }   )\r\n        //console.log(gifs)\r\n        // setImages(gifs)\r\n        return gifs\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__fadeInLeft animate__faster card\">\r\n            <img src={url} alt={title} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment} from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const {data:images,loading} = useFetchGifs(category)\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3 className=\"animate__animated animate__fadeInLeft animate__faster\"> {category}</h3>          \r\n            {loading && <p className=\"animate__animated animate__flash animate__faster\">Cargando...</p> }\r\n            <div className=\"card-grid\">      \r\n                {\r\n                    images.map( img =>(\r\n                        <GifGridItem        \r\n                            key={img.id}          \r\n                            //Enviamos como prop las propiedades de la img independientemente\r\n                            {...img}                         \r\n                        />)\r\n                    )\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs(categoria)\r\n        .then(imgs =>{\r\n        \r\n            console.log(imgs)\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        \r\n                \r\n        })\r\n\r\n    },[categoria])\r\n    return state\r\n}\r\n","import React, { Fragment, useState } from 'react'\r\nimport { AddCategory } from './componentes/AddCategory'\r\nimport { GifGrid } from './componentes/GifGrid'\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState([\"Naruto\"])\r\n    \r\n    return (\r\n        <Fragment>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory  setCategorias={setCategorias} />\r\n            <hr></hr>         \r\n            <ol>\r\n                {categorias.map(categoria=> \r\n                    <GifGrid key={categoria} category = {categoria} />\r\n                )}\r\n            </ol>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}